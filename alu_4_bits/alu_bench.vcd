$date
	Sun Aug 28 01:40:28 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_bench $end
$var wire 4 ! f [3:0] $end
$var wire 1 " cout $end
$var reg 2 # M [1:0] $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 1 & cin $end
$scope module alu_test $end
$var wire 2 ' M [1:0] $end
$var wire 4 ( a [3:0] $end
$var wire 4 ) b [3:0] $end
$var wire 1 & cin $end
$var wire 4 * f [3:0] $end
$var wire 1 " cout $end
$var wire 1 + c3 $end
$var wire 1 , c2 $end
$var wire 1 - c1 $end
$scope module first_alu $end
$var wire 2 . M [1:0] $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 & cin $end
$var wire 1 1 n3 $end
$var wire 1 2 n2 $end
$var wire 1 3 n1 $end
$var wire 1 4 fa $end
$var wire 1 5 f $end
$var wire 1 " cout $end
$scope module f_adder $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 & cin $end
$var reg 1 " c $end
$var reg 1 4 s $end
$upscope $end
$scope module n_and $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var reg 1 3 y $end
$upscope $end
$scope module n_mux $end
$var wire 2 6 M [1:0] $end
$var wire 1 3 a $end
$var wire 1 4 fa $end
$var wire 1 1 c $end
$var wire 1 2 b $end
$var reg 1 5 y $end
$upscope $end
$scope module n_or $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var reg 1 2 y $end
$upscope $end
$scope module n_xor $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var reg 1 1 y $end
$upscope $end
$upscope $end
$scope module fourth_alu $end
$var wire 2 7 M [1:0] $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : n3 $end
$var wire 1 ; n2 $end
$var wire 1 < n1 $end
$var wire 1 = fa $end
$var wire 1 > f $end
$var wire 1 + cout $end
$var wire 1 , cin $end
$scope module f_adder $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 , cin $end
$var reg 1 + c $end
$var reg 1 = s $end
$upscope $end
$scope module n_and $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var reg 1 < y $end
$upscope $end
$scope module n_mux $end
$var wire 2 ? M [1:0] $end
$var wire 1 < a $end
$var wire 1 = fa $end
$var wire 1 : c $end
$var wire 1 ; b $end
$var reg 1 > y $end
$upscope $end
$scope module n_or $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var reg 1 ; y $end
$upscope $end
$scope module n_xor $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var reg 1 : y $end
$upscope $end
$upscope $end
$scope module second_alu $end
$var wire 2 @ M [1:0] $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 " cin $end
$var wire 1 C n3 $end
$var wire 1 D n2 $end
$var wire 1 E n1 $end
$var wire 1 F fa $end
$var wire 1 G f $end
$var wire 1 - cout $end
$scope module f_adder $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 " cin $end
$var reg 1 - c $end
$var reg 1 F s $end
$upscope $end
$scope module n_and $end
$var wire 1 A a $end
$var wire 1 B b $end
$var reg 1 E y $end
$upscope $end
$scope module n_mux $end
$var wire 2 H M [1:0] $end
$var wire 1 E a $end
$var wire 1 F fa $end
$var wire 1 C c $end
$var wire 1 D b $end
$var reg 1 G y $end
$upscope $end
$scope module n_or $end
$var wire 1 A a $end
$var wire 1 B b $end
$var reg 1 D y $end
$upscope $end
$scope module n_xor $end
$var wire 1 A a $end
$var wire 1 B b $end
$var reg 1 C y $end
$upscope $end
$upscope $end
$scope module third_alu $end
$var wire 2 I M [1:0] $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 - cin $end
$var wire 1 L n3 $end
$var wire 1 M n2 $end
$var wire 1 N n1 $end
$var wire 1 O fa $end
$var wire 1 P f $end
$var wire 1 , cout $end
$scope module f_adder $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 - cin $end
$var reg 1 , c $end
$var reg 1 O s $end
$upscope $end
$scope module n_and $end
$var wire 1 J a $end
$var wire 1 K b $end
$var reg 1 N y $end
$upscope $end
$scope module n_mux $end
$var wire 2 Q M [1:0] $end
$var wire 1 N a $end
$var wire 1 O fa $end
$var wire 1 L c $end
$var wire 1 M b $end
$var reg 1 P y $end
$upscope $end
$scope module n_or $end
$var wire 1 J a $end
$var wire 1 K b $end
$var reg 1 M y $end
$upscope $end
$scope module n_xor $end
$var wire 1 J a $end
$var wire 1 K b $end
$var reg 1 L y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 Q
0P
0O
0N
0M
0L
0K
0J
b0 I
b0 H
0G
0F
0E
0D
0C
0B
0A
b0 @
b0 ?
0>
0=
0<
0;
0:
09
08
b0 7
b0 6
05
04
03
02
01
00
0/
b0 .
0-
0,
0+
b0 *
b0 )
b0 (
b0 '
0&
b0 %
b0 $
b0 #
0"
b0 !
$end
#10
b1 !
b1 *
15
14
1&
#20
1F
13
12
1"
04
b1 !
b1 *
15
10
1/
0&
b1 #
b1 '
b1 .
b1 6
b1 7
b1 ?
b1 @
b1 H
b1 I
b1 Q
b1 %
b1 )
b1 $
b1 (
#30
1O
1G
b10 !
b10 *
05
02
03
1-
0F
1E
1D
0"
14
00
1B
0/
1A
1&
b10 #
b10 '
b10 .
b10 6
b10 7
b10 ?
b10 @
b10 H
b10 I
b10 Q
b10 %
b10 )
b10 $
b10 (
#40
1F
13
12
1"
04
b0 !
b0 *
0G
10
1/
0&
b11 #
b11 '
b11 .
b11 6
b11 7
b11 ?
b11 @
b11 H
b11 I
b11 Q
b11 %
b11 )
b11 $
b11 (
#50
1>
0O
1=
15
02
03
0-
0F
0D
0E
1,
1N
1M
0"
14
0G
b1001 !
b1001 *
0P
00
0B
1K
0/
0A
1J
1&
b0 #
b0 '
b0 .
b0 6
b0 7
b0 ?
b0 @
b0 H
b0 I
b0 Q
b100 %
b100 )
b100 $
b100 (
#60
1F
13
12
1"
04
15
0>
b101 !
b101 *
1P
10
1/
0&
b1 #
b1 '
b1 .
b1 6
b1 7
b1 ?
b1 @
b1 H
b1 I
b1 Q
b101 %
b101 )
b101 $
b101 (
#70
1O
1G
b110 !
b110 *
05
02
03
1-
0F
1E
1D
0"
14
00
1B
0/
1A
1&
b10 #
b10 '
b10 .
b10 6
b10 7
b10 ?
b10 @
b10 H
b10 I
b10 Q
b110 %
b110 )
b110 $
b110 (
#80
1F
13
12
1"
04
0G
b0 !
b0 *
0P
10
1/
0&
b11 #
b11 '
b11 .
b11 6
b11 7
b11 ?
b11 @
b11 H
b11 I
b11 Q
b111 %
b111 )
b111 $
b111 (
#90
0O
0=
15
02
03
0-
0F
0D
0E
0,
0M
0N
1+
1<
1;
0"
14
0>
0G
b1 !
b1 *
0P
00
0B
0K
19
0/
0A
0J
18
1&
b0 #
b0 '
b0 .
b0 6
b0 7
b0 ?
b0 @
b0 H
b0 I
b0 Q
b1000 %
b1000 )
b1000 $
b1000 (
#100
1F
13
12
1"
04
15
b1001 !
b1001 *
1>
10
1/
0&
b1 #
b1 '
b1 .
b1 6
b1 7
b1 ?
b1 @
b1 H
b1 I
b1 Q
b1001 %
b1001 )
b1001 $
b1001 (
#110
1O
1G
b1010 !
b1010 *
05
02
03
1-
0F
1E
1D
0"
14
00
1B
0/
1A
1&
b10 #
b10 '
b10 .
b10 6
b10 7
b10 ?
b10 @
b10 H
b10 I
b10 Q
b1010 %
b1010 )
b1010 $
b1010 (
#120
1F
13
12
1"
04
0>
b0 !
b0 *
0G
10
1/
0&
b11 #
b11 '
b11 .
b11 6
b11 7
b11 ?
b11 @
b11 H
b11 I
b11 Q
b1011 %
b1011 )
b1011 $
b1011 (
#130
1>
0O
1=
15
02
03
0-
0F
0D
0E
1,
1N
1M
0"
14
0G
b1001 !
b1001 *
0P
00
0B
1K
0/
0A
1J
1&
b0 #
b0 '
b0 .
b0 6
b0 7
b0 ?
b0 @
b0 H
b0 I
b0 Q
b1100 %
b1100 )
b1100 $
b1100 (
#140
1F
13
12
1"
04
15
b1101 !
b1101 *
1P
10
1/
0&
b1 #
b1 '
b1 .
b1 6
b1 7
b1 ?
b1 @
b1 H
b1 I
b1 Q
b1101 %
b1101 )
b1101 $
b1101 (
#150
1O
1G
b1110 !
b1110 *
05
02
03
1-
0F
1E
1D
0"
14
00
1B
0/
1A
1&
b10 #
b10 '
b10 .
b10 6
b10 7
b10 ?
b10 @
b10 H
b10 I
b10 Q
b1110 %
b1110 )
b1110 $
b1110 (
#160
1F
13
12
1"
04
0>
0G
b0 !
b0 *
0P
10
1/
0&
b11 #
b11 '
b11 .
b11 6
b11 7
b11 ?
b11 @
b11 H
b11 I
b11 Q
b1111 %
b1111 )
b1111 $
b1111 (
